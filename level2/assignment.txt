Q1.Write Mongo query to retrieve documents from the orders in ascending order by total?
ans. db.orders.aggregate([{$match:{}},{$sort:{total:1}}])

Q2.Write Mongo query to retrieve the oldest paymentMethod from the payments collection as "_id".
ans. db.payments.aggregate([{$sort:{paymentDate:1}},{$limit:1},{$project:{_id:$paymentMethod}}])

Q3.Write Mongo query to retrieve the recent paymentMethod from the payments collection as "_id"?
ans. db.payments.aggregate([{$sort:{paymentDate:-1}},{$limit:1},{$project:{_id:$paymentMethod}}])


Q4.Write Mongo query to retrieve 2nd and 3rd buyers from the buyers collection?
ans. db.buyers.find().skip(1).limit(2);

Q5.Write Mongo query to retrieve the less Expensive product from order_details?
ans. db.order_details.aggregate([{$sort:{price:1}},{$limit:1}])

Q6.Write Mongo query to retrieve the most Expensive product from order_details?
ans.  db.order_details.aggregate([{$sort:{price:-1}},{$limit:1}])

Q7.Write Mongo query to retrieve the first order from the orders as per the order_date?
ans. db.orders.aggregate([{$sort:{order_date:1}},{$limit:1}])

Q8.Write Mongo query to retrieve the last 3 orders from the orders collection who have less total amount?
ans. db.orders.aggregate([{$sort:{total:1}},{$limit:3}])

Q9.Write Mongo query to retrieve the most recent shipped order from the orders collection?
ans. db.orders.aggregate([{$match:{status:"shipped"}},{$sort:{ship_date:-1}},{$limit:1}])

Q10.Write Mongo query to get the total revenue from all orders?
ans. db.orders.aggregate([{$group:{_id:1, totalRevenue:{$sum:"$total"}}}])

Q11.Write Mongo query to retrieve all the orders that shipped before 2022-05-26?
ans. db.orders.aggregate([{$match:{ship_date:{$lt:"2022-05-26"}}}])

Q12.Write Mongo query to find the maximum price as maxPrice of products and their names as name for each category?
ans. db.products.aggregate([
  {
    $group: {
      _id: "$category_id",
      maxPrice: { $max: "$price" }
    }
  },
  {
    $lookup: {
      from: "products",
      let: { category_id: "$_id", maxPrice: "$maxPrice" },
      pipeline: [
        {
          $match: {
            $expr: {
              $and: [
                { $eq: ["$category_id", "$$category_id"] },
                { $eq: ["$price", "$$maxPrice"] }
              ]
            }
          }
        },
        {
          $project: {
            _id: 0,
            name: 1,
            price: 1
          }
        }
      ],
      as: "productsWithMaxPrice"
    }
  },
  {
    $unwind: "$productsWithMaxPrice"
  },
  {
    $project: {
      _id: 0,
      category_id: "$_id",
      maxPrice: 1,
      name: "$productsWithMaxPrice.name"
    }
  }
])

Q13.Write Mongo query to find Most used payment Method as paymentMethod and the number of time it is used as count.
ans. db.payments.aggregate([{$group:{_id:"$paymentMethod",count:{$count:{}}}},{$sort:{count:1}},{$limit:1}])

Q14.Write Mongo query to find the total count of orders by status?
ans. db.orders.aggregate([{$group:{_id:"$status",count:{}}}])

Q15.Write Mongo query to retrieve the orders grouped by customer_id with the max total?
ans. db.orders.aggregate([{$group:{_id:customer_id, maxTotal:{$sum:"$total"}}},{$sort:{maxTotal:-1}},{$limit:1}]) 

Q16.Write Mongo query to retrieve the orders grouped by customer_id with the average total?
ans. db.orders.aggregate([{$group:{_id:"$customer_id", average:{$avg:"$total"}}}])
